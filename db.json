{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/Yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/AcFun.png","path":"img/AcFun.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/CSDN.png","path":"img/CSDN.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/Coding.png","path":"img/Coding.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/LOFTER.png","path":"img/LOFTER.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/Plunker.png","path":"img/Plunker.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/Quora.png","path":"img/Quora.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/bilibili.png","path":"img/bilibili.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/niconico.png","path":"img/niconico.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/博客园.png","path":"img/博客园.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/简书.png","path":"img/简书.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/知乎.png","path":"img/知乎.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/backup/bg-1.jpg","path":"background/backup/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/backup/bg-2.jpg","path":"background/backup/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/backup/bg-3.jpg","path":"background/backup/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/Yelee/source/background/backup/bg-4.jpg","path":"background/backup/bg-4.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"1533fd65f74b1ef555eb1963554acd81646db80c","modified":1492049981290},{"_id":"source/favicon.ico","hash":"d67c4be2feb621b601ca0a00753882b1fa274c37","modified":1492056430770},{"_id":"themes/Yelee/README.md","hash":"12bc9cdb68f51df81bcc36a5263e0a6c5860f646","modified":1492066092696},{"_id":"themes/Yelee/_config.yml","hash":"f553ad7e612ffce3e810d6c5bd3c1c048b325c94","modified":1492075602687},{"_id":"themes/Yelee/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1492066093268},{"_id":"source/_posts/angular-$rootScope.$new().md","hash":"409dbce3ea48d01bb7cd532c19d4e5e689dc931d","modified":1492075120918},{"_id":"source/_posts/currentTarget.md","hash":"751a609539cc03994166c20489afb737d4224877","modified":1492075102985},{"_id":"source/_posts/vue-cli创建的任务和后台交互cookie及restAPI处理.md","hash":"af4eef06e0e8d74f9e58511ad21b014c8cbb487e","modified":1492075300968},{"_id":"source/_posts/所谓publish-subscribe.md","hash":"5eb216663dd65ea0583fe2b4d0ee9e32829c0090","modified":1492075315216},{"_id":"source/tags/index.md","hash":"ef90c2343f9637a103be80cabe86537b7125f7a4","modified":1492071497369},{"_id":"themes/Yelee/languages/default.yml","hash":"3bdad891c90029447b4fbaedbbb11b8a59d06418","modified":1492066092707},{"_id":"themes/Yelee/languages/en.yml","hash":"ff991c2c80d9ab69c984acb1c40480c8b98be2bc","modified":1492066092712},{"_id":"themes/Yelee/languages/zh-Hans.yml","hash":"4fa4068a65089810e7dd95692f9157eb80c2e8de","modified":1492066092718},{"_id":"themes/Yelee/languages/zh-Hant-HK.yml","hash":"bbc73dcd9170fe9efaab6fbbe1571886e0b8aa89","modified":1492066092723},{"_id":"themes/Yelee/languages/zh-Hant-TW.yml","hash":"88b4678bba940bc270c7aea2debbf869ecf6cc18","modified":1492066092729},{"_id":"themes/Yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1492066093239},{"_id":"themes/Yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1492066093241},{"_id":"themes/Yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1492066093243},{"_id":"themes/Yelee/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1492066093257},{"_id":"themes/Yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1492066093259},{"_id":"themes/Yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1492066093262},{"_id":"themes/Yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1492066093264},{"_id":"themes/Yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1492066093270},{"_id":"themes/Yelee/layout/_partial/archive-post.ejs","hash":"0ecc2ad07b4abad80f564ac1858c50bcbdff34f8","modified":1492066092767},{"_id":"themes/Yelee/layout/_partial/after-footer.ejs","hash":"748391b89b661fa1ed7da0b15ed6870981ec4dc3","modified":1492066092760},{"_id":"themes/Yelee/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1492066092788},{"_id":"themes/Yelee/layout/_partial/article.ejs","hash":"afd85b362d732fa9b439af7dc44b657d0d1aae3d","modified":1492066092829},{"_id":"themes/Yelee/layout/_partial/background.ejs","hash":"aeef39abef66ee0bd6c9efe856eaeb1b81416d41","modified":1492066092851},{"_id":"themes/Yelee/layout/_partial/footer.ejs","hash":"419eef7ab3114083d7e430176865ac0407469fea","modified":1492069102585},{"_id":"themes/Yelee/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1492066092965},{"_id":"themes/Yelee/layout/_partial/head.ejs","hash":"55e90c3d5de6d7ffcfe26c4dc22189a7a27b6651","modified":1492066093041},{"_id":"themes/Yelee/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1492066093043},{"_id":"themes/Yelee/layout/_partial/ie-updater.ejs","hash":"8d1e1f3953efbcf5ec84a451439a62a1c95b55d7","modified":1492066093051},{"_id":"themes/Yelee/layout/_partial/left-col.ejs","hash":"90fd7c763faf8d64d58612f592cbacbefdaea161","modified":1492066093076},{"_id":"themes/Yelee/layout/_partial/mathjax.ejs","hash":"ce868f8b2b5b377cadc270e3a5bb5826f8bf0dee","modified":1492066093091},{"_id":"themes/Yelee/layout/_partial/mobile-nav.ejs","hash":"306be982577b0ef968f855d0dfeaab6b180b8a50","modified":1492066093098},{"_id":"themes/Yelee/layout/_partial/open-in-new-tab.ejs","hash":"a59d4c768009dd621e741a29cf6446ebc2668fe9","modified":1492066093111},{"_id":"themes/Yelee/layout/_partial/page.ejs","hash":"cfce60062cdb60893baeda7fa0266ae4086c2bc8","modified":1492066093118},{"_id":"themes/Yelee/layout/_partial/post-nav-button.ejs","hash":"0a98bffdd14f6677721841c0ac4487a86c77266c","modified":1492066093124},{"_id":"themes/Yelee/layout/_partial/scrolling-button.ejs","hash":"c5e1c3a8e1e6b0d927ac25a7fb8720ee7ac83ad8","modified":1492066093176},{"_id":"themes/Yelee/layout/_partial/tab-title-change.ejs","hash":"7c4a7177e0c77de2d7607ca29fc395abebd34db7","modified":1492066093193},{"_id":"themes/Yelee/layout/_partial/tag-cloud-page.ejs","hash":"c7b25ef136e129c948ac37d6ff19e8815ab9fee6","modified":1492066093218},{"_id":"themes/Yelee/layout/_partial/toc.ejs","hash":"7ee88b1a98eea5cbd44c0f9a11b86b46aa2d6752","modified":1492066093237},{"_id":"themes/Yelee/source/background/bg-1.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1492066093304},{"_id":"themes/Yelee/source/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1492066093310},{"_id":"themes/Yelee/source/background/bg-3.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1492066093316},{"_id":"themes/Yelee/source/background/bg-4.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1492066093324},{"_id":"themes/Yelee/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1492066093340},{"_id":"themes/Yelee/source/css/_variables.styl","hash":"f429eb9bc9f0a270ec68c4f4c63903250746a01c","modified":1492066093487},{"_id":"themes/Yelee/source/css/style.styl","hash":"b285f9a75abd09c7d06fe89e70f9e1819eac27dd","modified":1492066093492},{"_id":"themes/Yelee/source/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1492066093494},{"_id":"themes/Yelee/source/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1492066093496},{"_id":"themes/Yelee/source/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1492066093498},{"_id":"themes/Yelee/source/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1492066093500},{"_id":"themes/Yelee/source/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1492066093502},{"_id":"themes/Yelee/source/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1492066093503},{"_id":"themes/Yelee/source/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1492066093506},{"_id":"themes/Yelee/source/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1492066093507},{"_id":"themes/Yelee/source/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1492066093509},{"_id":"themes/Yelee/source/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1492066093512},{"_id":"themes/Yelee/source/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1492066093514},{"_id":"themes/Yelee/source/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1492066093515},{"_id":"themes/Yelee/source/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1492066093517},{"_id":"themes/Yelee/source/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1492066093519},{"_id":"themes/Yelee/source/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1492066093522},{"_id":"themes/Yelee/source/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1492066093524},{"_id":"themes/Yelee/source/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1492066093526},{"_id":"themes/Yelee/source/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1492066093521},{"_id":"themes/Yelee/source/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1492066093527},{"_id":"themes/Yelee/source/js/GithubRepoWidget.js","hash":"5fb1bf6cf973062771ddf275ceeca5bc69c81c77","modified":1492066093547},{"_id":"themes/Yelee/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1492066093550},{"_id":"themes/Yelee/source/js/main.js","hash":"369774a7ff45a2e5117a796330a04aeb50a61fdf","modified":1492066093565},{"_id":"themes/Yelee/source/js/mobile.js","hash":"8abc32d18f16db56f51caad607cffb6ca756eca9","modified":1492066093579},{"_id":"themes/Yelee/source/js/pc.js","hash":"bc289c5dc610e2a34d308daeb9adea96d01f7788","modified":1492066093595},{"_id":"themes/Yelee/source/js/search.js","hash":"001e324844e63f3bfb6f60d173b9c6954127be0b","modified":1492066093611},{"_id":"themes/Yelee/source/js/toc.js","hash":"973c1a4e2c9de8f4f662b99623027658fe6d94c2","modified":1492066093628},{"_id":"themes/Yelee/source/background/bg-5.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1492066093330},{"_id":"themes/Yelee/source/background/bg-6.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1492066093336},{"_id":"themes/Yelee/source/img/avatar.png","hash":"5811c3e9286afa5821274f837c884ad19ec10ec1","modified":1492067210265},{"_id":"themes/Yelee/layout/_partial/comments/click2show.ejs","hash":"ecc4d3ca997c6fd127e00fa2edf0158b925d1d3e","modified":1492066092862},{"_id":"themes/Yelee/layout/_partial/comments/count-comment.ejs","hash":"ada2032e401b73b312c50b75bdbb8ee71d5a291e","modified":1492066092890},{"_id":"themes/Yelee/layout/_partial/comments/disqus.ejs","hash":"df7ee469b648b12b5ee3104ef513d54cbb7418af","modified":1492066092908},{"_id":"themes/Yelee/layout/_partial/comments/duoshuo.ejs","hash":"e7f12f1246a67a5b556c2d5b37dc78733f1cf15a","modified":1492066092924},{"_id":"themes/Yelee/layout/_partial/comments/youyan.ejs","hash":"d150085faee4809ba50f69c55d904605699040cb","modified":1492066092945},{"_id":"themes/Yelee/layout/_partial/post/category.ejs","hash":"08c8d98bc6a73d3f72a3b0b30521ff28e1b657a7","modified":1492066093126},{"_id":"themes/Yelee/layout/_partial/post/date.ejs","hash":"329ed372296a86bce73ff8936af5601723fdd70a","modified":1492066093137},{"_id":"themes/Yelee/layout/_partial/post/nav.ejs","hash":"6f531dbc9cc7ae42d2486d6707f826cfe7d9d8bc","modified":1492066093157},{"_id":"themes/Yelee/layout/_partial/post/share.ejs","hash":"58c2db54a9867aaafe68a7f052b04701c7c3df0f","modified":1492066093168},{"_id":"themes/Yelee/layout/_partial/post/tag.ejs","hash":"7d2693a1162bf26e4b1ae9b789e0b2a2637ddbd5","modified":1492066093170},{"_id":"themes/Yelee/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1492066093171},{"_id":"themes/Yelee/source/background/backup/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1492066093278},{"_id":"themes/Yelee/source/background/backup/bg-2.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1492066093285},{"_id":"themes/Yelee/source/background/backup/bg-3.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1492066093291},{"_id":"themes/Yelee/source/background/backup/bg-4.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1492066093298},{"_id":"themes/Yelee/source/css/_partial/archive.styl","hash":"102c23dbb6cde3cbfca3b151c742e0d77911186e","modified":1492066093347},{"_id":"themes/Yelee/source/css/_partial/article.styl","hash":"190828c822096bb3098a7d14c3340eb004057aa0","modified":1492066093353},{"_id":"themes/Yelee/source/css/_partial/footer.styl","hash":"a419108f1b820c59fcc56d218bfaaa4ffc4f1d4d","modified":1492066093404},{"_id":"themes/Yelee/source/css/_partial/instagram.styl","hash":"a093443add2f529396d6b6bdef1675bc3acf3958","modified":1492066093412},{"_id":"themes/Yelee/source/css/_partial/highlight.styl","hash":"4e34bf9340ce9b15d2d59fc4ea761d1d110927cf","modified":1492066093411},{"_id":"themes/Yelee/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1492066093405},{"_id":"themes/Yelee/source/css/_partial/main.styl","hash":"405db411896f3c7de9e7dd27e58c920fb90b9834","modified":1492066093421},{"_id":"themes/Yelee/source/css/_partial/mobile-slider.styl","hash":"39db458d4e9f6973afc1390b4d3fc0291fff4c40","modified":1492066093427},{"_id":"themes/Yelee/source/css/_partial/mobile.styl","hash":"dfb20f2515a26d75e42fe09741e91cc889426b11","modified":1492066093435},{"_id":"themes/Yelee/source/css/_partial/page.styl","hash":"ca3f871adf8fdb296e4394070605dded53d93cb2","modified":1492066093440},{"_id":"themes/Yelee/source/css/_partial/scroll.styl","hash":"f32deb9192568a2ea789d77a23a08d07f4e57d59","modified":1492066093442},{"_id":"themes/Yelee/source/css/_partial/search.styl","hash":"688ff535a6005be02d947be75d22cfe1f8ce72cd","modified":1492066093447},{"_id":"themes/Yelee/source/css/_partial/share.styl","hash":"88c1277397b71eb1f3473a94d9542314f983cd09","modified":1492066093456},{"_id":"themes/Yelee/source/css/_partial/tagcloud.styl","hash":"b38b275728bfe11809defe1077b03cb423c3c92f","modified":1492066093462},{"_id":"themes/Yelee/source/css/_partial/toc.styl","hash":"8f2a057dc072285093e37f1f645e9cb53608642f","modified":1492066093468},{"_id":"themes/Yelee/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1492066093473},{"_id":"themes/Yelee/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1492066093475},{"_id":"themes/Yelee/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1492066093478},{"_id":"themes/Yelee/source/css/_partial/customise/code-block.styl","hash":"4db1a992a06fd92b779f0afc9bb8bb3667bdb101","modified":1492066093369},{"_id":"themes/Yelee/source/css/_partial/customise/blockquote.styl","hash":"5e6edb9ad49288743ed550a2bd8c9a3c8e208455","modified":1492066093359},{"_id":"themes/Yelee/source/css/_partial/customise/color-scheme.styl","hash":"b58262a9f8903e75df431291745e19ccd8ff243a","modified":1492066093374},{"_id":"themes/Yelee/source/css/_partial/customise/heading.styl","hash":"c29799f09ebd87767fd9cc3b1fa795db44a94670","modified":1492066093379},{"_id":"themes/Yelee/source/css/_partial/customise/inline-code.styl","hash":"a15292b2b3541ea022c0fb7441875192dee5ad9d","modified":1492066093388},{"_id":"themes/Yelee/source/css/_partial/customise/list.styl","hash":"7db683e2837a078ad7817fb88914535588e49cfa","modified":1492066093394},{"_id":"themes/Yelee/source/css/_partial/customise/social-icon.styl","hash":"bfa5c863d474266f32a570e34a0effda964f7f40","modified":1492066093399}],"Category":[{"name":"课外学习","_id":"cj1g7ayah000bucv3wehcjf4f"}],"Data":[],"Page":[{"title":"tags","date":"2017-04-13T08:18:17.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-04-13 16:18:17\n---\n","updated":"2017-04-13T08:18:17.369Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj1g7aya80009ucv36z8w1dsi","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"angular-$rootScope.$new()","_content":"## Scope实例上面有这么一个属性：$new()\n### $new(isolate, parent)\n``所有scope都是通过$new创建``\n#### 参数解释\n\n1. 参数一（isolate）设置是否为孤立作用域\n\n- 如果是`true`，则建立孤立作用域，孤立作用域直接和祖级作用域联系 `child = new Scope(); child.$root = this.$root`\n- 如果是`false`，则判断此`$rootScope`有没有子作用域，如果没有则建立一个子作用域构造函数，并且将这个子作用域的原型指向`this（`$rootScope => Scope的实例`）`,然后将`child = new this.$$ChildScope() child.__proto__ = Scope.prototype`\n2. 参数二设置要`new`的作用域的`parent`，如果不设置则将`parent = this`， 也就是将`new`的`child`挂载到`this(此$rootScope)上面，然后给`parent`的子作用域排序，有个判断如果设置了`isolate`并且`parent != this`,**则作用域不监听$destory事件**\n\n3. ## e.g\n`var scope = $rootScope.$new()`\n##### 没有指定参数，则1.将scope的父级指向$rootScope, 2.将scope创建为$rootScope的子作用域，并在原型上继承$rootScope的所有属性方法，返回。\n`\n","source":"_posts/angular-$rootScope.$new().md","raw":"---\ntitle: angular-$rootScope.$new()\ntags: \n  - angular\n  - javascript\n---\n## Scope实例上面有这么一个属性：$new()\n### $new(isolate, parent)\n``所有scope都是通过$new创建``\n#### 参数解释\n\n1. 参数一（isolate）设置是否为孤立作用域\n\n- 如果是`true`，则建立孤立作用域，孤立作用域直接和祖级作用域联系 `child = new Scope(); child.$root = this.$root`\n- 如果是`false`，则判断此`$rootScope`有没有子作用域，如果没有则建立一个子作用域构造函数，并且将这个子作用域的原型指向`this（`$rootScope => Scope的实例`）`,然后将`child = new this.$$ChildScope() child.__proto__ = Scope.prototype`\n2. 参数二设置要`new`的作用域的`parent`，如果不设置则将`parent = this`， 也就是将`new`的`child`挂载到`this(此$rootScope)上面，然后给`parent`的子作用域排序，有个判断如果设置了`isolate`并且`parent != this`,**则作用域不监听$destory事件**\n\n3. ## e.g\n`var scope = $rootScope.$new()`\n##### 没有指定参数，则1.将scope的父级指向$rootScope, 2.将scope创建为$rootScope的子作用域，并在原型上继承$rootScope的所有属性方法，返回。\n`\n","slug":"angular-$rootScope.$new()","published":1,"date":"2017-04-13T03:24:47.174Z","updated":"2017-04-13T09:18:40.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1g7ay900000ucv3cvpjtrgf","content":"<h2 id=\"Scope实例上面有这么一个属性：-new\"><a href=\"#Scope实例上面有这么一个属性：-new\" class=\"headerlink\" title=\"Scope实例上面有这么一个属性：$new()\"></a>Scope实例上面有这么一个属性：$new()</h2><h3 id=\"new-isolate-parent\"><a href=\"#new-isolate-parent\" class=\"headerlink\" title=\"$new(isolate, parent)\"></a>$new(isolate, parent)</h3><p><code>所有scope都是通过$new创建</code></p>\n<h4 id=\"参数解释\"><a href=\"#参数解释\" class=\"headerlink\" title=\"参数解释\"></a>参数解释</h4><ol>\n<li>参数一（isolate）设置是否为孤立作用域</li>\n</ol>\n<ul>\n<li>如果是<code>true</code>，则建立孤立作用域，孤立作用域直接和祖级作用域联系 <code>child = new Scope(); child.$root = this.$root</code></li>\n<li>如果是<code>false</code>，则判断此<code>$rootScope</code>有没有子作用域，如果没有则建立一个子作用域构造函数，并且将这个子作用域的原型指向<code>this（</code>$rootScope =&gt; Scope的实例<code>）</code>,然后将<code>child = new this.$$ChildScope() child.__proto__ = Scope.prototype</code></li>\n</ul>\n<ol>\n<li><p>参数二设置要<code>new</code>的作用域的<code>parent</code>，如果不设置则将<code>parent = this</code>， 也就是将<code>new</code>的<code>child</code>挂载到<code>this(此$rootScope)上面，然后给</code>parent<code>的子作用域排序，有个判断如果设置了</code>isolate<code>并且</code>parent != this`,<strong>则作用域不监听$destory事件</strong></p>\n</li>\n<li><h2 id=\"e-g\"><a href=\"#e-g\" class=\"headerlink\" title=\"e.g\"></a>e.g</h2><p><code>var scope = $rootScope.$new()</code></p>\n<h5 id=\"没有指定参数，则1-将scope的父级指向-rootScope-2-将scope创建为-rootScope的子作用域，并在原型上继承-rootScope的所有属性方法，返回。\"><a href=\"#没有指定参数，则1-将scope的父级指向-rootScope-2-将scope创建为-rootScope的子作用域，并在原型上继承-rootScope的所有属性方法，返回。\" class=\"headerlink\" title=\"没有指定参数，则1.将scope的父级指向$rootScope, 2.将scope创建为$rootScope的子作用域，并在原型上继承$rootScope的所有属性方法，返回。\"></a>没有指定参数，则1.将scope的父级指向$rootScope, 2.将scope创建为$rootScope的子作用域，并在原型上继承$rootScope的所有属性方法，返回。</h5><p>`</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Scope实例上面有这么一个属性：-new\"><a href=\"#Scope实例上面有这么一个属性：-new\" class=\"headerlink\" title=\"Scope实例上面有这么一个属性：$new()\"></a>Scope实例上面有这么一个属性：$new()</h2><h3 id=\"new-isolate-parent\"><a href=\"#new-isolate-parent\" class=\"headerlink\" title=\"$new(isolate, parent)\"></a>$new(isolate, parent)</h3><p><code>所有scope都是通过$new创建</code></p>\n<h4 id=\"参数解释\"><a href=\"#参数解释\" class=\"headerlink\" title=\"参数解释\"></a>参数解释</h4><ol>\n<li>参数一（isolate）设置是否为孤立作用域</li>\n</ol>\n<ul>\n<li>如果是<code>true</code>，则建立孤立作用域，孤立作用域直接和祖级作用域联系 <code>child = new Scope(); child.$root = this.$root</code></li>\n<li>如果是<code>false</code>，则判断此<code>$rootScope</code>有没有子作用域，如果没有则建立一个子作用域构造函数，并且将这个子作用域的原型指向<code>this（</code>$rootScope =&gt; Scope的实例<code>）</code>,然后将<code>child = new this.$$ChildScope() child.__proto__ = Scope.prototype</code></li>\n</ul>\n<ol>\n<li><p>参数二设置要<code>new</code>的作用域的<code>parent</code>，如果不设置则将<code>parent = this</code>， 也就是将<code>new</code>的<code>child</code>挂载到<code>this(此$rootScope)上面，然后给</code>parent<code>的子作用域排序，有个判断如果设置了</code>isolate<code>并且</code>parent != this`,<strong>则作用域不监听$destory事件</strong></p>\n</li>\n<li><h2 id=\"e-g\"><a href=\"#e-g\" class=\"headerlink\" title=\"e.g\"></a>e.g</h2><p><code>var scope = $rootScope.$new()</code></p>\n<h5 id=\"没有指定参数，则1-将scope的父级指向-rootScope-2-将scope创建为-rootScope的子作用域，并在原型上继承-rootScope的所有属性方法，返回。\"><a href=\"#没有指定参数，则1-将scope的父级指向-rootScope-2-将scope创建为-rootScope的子作用域，并在原型上继承-rootScope的所有属性方法，返回。\" class=\"headerlink\" title=\"没有指定参数，则1.将scope的父级指向$rootScope, 2.将scope创建为$rootScope的子作用域，并在原型上继承$rootScope的所有属性方法，返回。\"></a>没有指定参数，则1.将scope的父级指向$rootScope, 2.将scope创建为$rootScope的子作用域，并在原型上继承$rootScope的所有属性方法，返回。</h5><p>`</p>\n</li>\n</ol>\n"},{"title":"DOM属性currentTarget","_content":"```\n<html>\n<head>\n<script type=\"text/javascript\">\nfunction getEventTrigger(event)\n  { \n  x=event.currentTarget; \nconsole.log(event)\nconsole.log(event.currentTarget)\n  }\n</script>\n</head>\n<body >\n<p id=\"p1\" onmousedown=\"getEventTrigger(event)\">\nClick on this paragraph. An alert box will\nshow which element triggered the event.</p>\n</body>\n</html>\n```\n\n### 运行此代码会发现： **console.log(event) currentTarget:null**  而直接打印currentTarget则返回当前节点\n\n#### 这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况","source":"_posts/currentTarget.md","raw":"---\ntitle: DOM属性currentTarget\ntags: \n  - javascript\n---\n```\n<html>\n<head>\n<script type=\"text/javascript\">\nfunction getEventTrigger(event)\n  { \n  x=event.currentTarget; \nconsole.log(event)\nconsole.log(event.currentTarget)\n  }\n</script>\n</head>\n<body >\n<p id=\"p1\" onmousedown=\"getEventTrigger(event)\">\nClick on this paragraph. An alert box will\nshow which element triggered the event.</p>\n</body>\n</html>\n```\n\n### 运行此代码会发现： **console.log(event) currentTarget:null**  而直接打印currentTarget则返回当前节点\n\n#### 这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况","slug":"currentTarget","published":1,"date":"2017-04-13T08:16:07.925Z","updated":"2017-04-13T09:18:22.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1g7ay980001ucv3eyq4wjwu","content":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getEventTrigger</span>(<span class=\"params\">event</span>)</span></div><div class=\"line\">  &#123; </div><div class=\"line\">  x=event.currentTarget; </div><div class=\"line\"><span class=\"built_in\">console</span>.log(event)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(event.currentTarget)</div><div class=\"line\">  &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"p1\"</span> <span class=\"attr\">onmousedown</span>=<span class=\"string\">\"getEventTrigger(event)\"</span>&gt;</span></div><div class=\"line\">Click on this paragraph. An alert box will</div><div class=\"line\">show which element triggered the event.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"运行此代码会发现：-console-log-event-currentTarget-null-而直接打印currentTarget则返回当前节点\"><a href=\"#运行此代码会发现：-console-log-event-currentTarget-null-而直接打印currentTarget则返回当前节点\" class=\"headerlink\" title=\"运行此代码会发现： console.log(event) currentTarget:null  而直接打印currentTarget则返回当前节点\"></a>运行此代码会发现： <strong>console.log(event) currentTarget:null</strong>  而直接打印currentTarget则返回当前节点</h3><h4 id=\"这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况\"><a href=\"#这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况\" class=\"headerlink\" title=\"这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况\"></a>这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况</h4>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getEventTrigger</span>(<span class=\"params\">event</span>)</div><div class=\"line\">  </span>&#123; </div><div class=\"line\">  x=event.currentTarget; </div><div class=\"line\"><span class=\"built_in\">console</span>.log(event)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(event.currentTarget)</div><div class=\"line\">  &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"p1\"</span> <span class=\"attr\">onmousedown</span>=<span class=\"string\">\"getEventTrigger(event)\"</span>&gt;</span></div><div class=\"line\">Click on this paragraph. An alert box will</div><div class=\"line\">show which element triggered the event.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"运行此代码会发现：-console-log-event-currentTarget-null-而直接打印currentTarget则返回当前节点\"><a href=\"#运行此代码会发现：-console-log-event-currentTarget-null-而直接打印currentTarget则返回当前节点\" class=\"headerlink\" title=\"运行此代码会发现： console.log(event) currentTarget:null  而直接打印currentTarget则返回当前节点\"></a>运行此代码会发现： <strong>console.log(event) currentTarget:null</strong>  而直接打印currentTarget则返回当前节点</h3><h4 id=\"这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况\"><a href=\"#这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况\" class=\"headerlink\" title=\"这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况\"></a>这是由于打印event的时候currentTarget被重置为null了，用debug查看的话就不会出现null这种情况</h4>"},{"title":"vue-cli创建的任务和后台交互cookie及restAPI处理","_content":"#### 在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，  \n经检查是cookie的path作用域的原因，可以这样解决。\n```\n let options = proxyTable[ctx]\n\n  if (typeof options === 'string') {\n    options = {\n      target: options,\n      changeOrigin: true,\n\n      onProxyRes(proxyRes, req, res) {\n        Array.prototype.slice.call(proxyRes.headers['set-cookie'] || '')  \n        .map(item => {\n          item = item.replace(/Path=\\/.*?;/, 'Path=/;')\n        })\n      }\n\n    }\n  }\n```\n<!-- more -->\n这段代码就是将proxyRes.headers['set-cookie']的path=/xx 转变成 path=/\n\n\n### 有时候在做代理请求的时候，需要拦截处理req的设置，  \n查看**http-proxy-middleware**的文档，可以用filter做拦截，代码：\n```\napp.use(proxyMiddleware((pathName, req) => {\n    pathName = req.originalUrl = req.url = `${rootAPI}${req.url}`\n\n    return pathName.match(ctx)\n  }, options))\n```\n\n#### 最后vue proxy这块的总代码：\n```\nObject.keys(proxyTable).forEach(ctx => {\n  let options = proxyTable[ctx]\n\n  if (typeof options === 'string') {\n    options = {\n      target: options,\n      changeOrigin: true,\n      onProxyRes(proxyRes, req, res) {\n        Array.prototype.slice.call(proxyRes.headers['set-cookie'] || '')  \n        .map(item => {\n          item = item.replace(/Path=\\/.*?;/, 'Path=/;')\n        })\n      }\n    }\n  }\n\n  app.use(proxyMiddleware((pathName, req) => {\n    pathName = req.originalUrl = req.url = `${rootAPI}${req.url}`    \n    // 可以在此处进行处理request请求\n\n    return pathName.match(ctx)\n  }, options))\n\n})\n```\n","source":"_posts/vue-cli创建的任务和后台交互cookie及restAPI处理.md","raw":"---\ntitle: vue-cli创建的任务和后台交互cookie及restAPI处理\ncategories: 课外学习\ntags:\n  - vue\n  - cookie\n  - node.js\n  - javascript\n---\n#### 在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，  \n经检查是cookie的path作用域的原因，可以这样解决。\n```\n let options = proxyTable[ctx]\n\n  if (typeof options === 'string') {\n    options = {\n      target: options,\n      changeOrigin: true,\n\n      onProxyRes(proxyRes, req, res) {\n        Array.prototype.slice.call(proxyRes.headers['set-cookie'] || '')  \n        .map(item => {\n          item = item.replace(/Path=\\/.*?;/, 'Path=/;')\n        })\n      }\n\n    }\n  }\n```\n<!-- more -->\n这段代码就是将proxyRes.headers['set-cookie']的path=/xx 转变成 path=/\n\n\n### 有时候在做代理请求的时候，需要拦截处理req的设置，  \n查看**http-proxy-middleware**的文档，可以用filter做拦截，代码：\n```\napp.use(proxyMiddleware((pathName, req) => {\n    pathName = req.originalUrl = req.url = `${rootAPI}${req.url}`\n\n    return pathName.match(ctx)\n  }, options))\n```\n\n#### 最后vue proxy这块的总代码：\n```\nObject.keys(proxyTable).forEach(ctx => {\n  let options = proxyTable[ctx]\n\n  if (typeof options === 'string') {\n    options = {\n      target: options,\n      changeOrigin: true,\n      onProxyRes(proxyRes, req, res) {\n        Array.prototype.slice.call(proxyRes.headers['set-cookie'] || '')  \n        .map(item => {\n          item = item.replace(/Path=\\/.*?;/, 'Path=/;')\n        })\n      }\n    }\n  }\n\n  app.use(proxyMiddleware((pathName, req) => {\n    pathName = req.originalUrl = req.url = `${rootAPI}${req.url}`    \n    // 可以在此处进行处理request请求\n\n    return pathName.match(ctx)\n  }, options))\n\n})\n```\n","slug":"vue-cli创建的任务和后台交互cookie及restAPI处理","published":1,"date":"2017-04-13T08:15:38.476Z","updated":"2017-04-13T09:21:40.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1g7aya50008ucv3z8nv1582","content":"<h4 id=\"在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，\"><a href=\"#在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，\" class=\"headerlink\" title=\"在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，\"></a>在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，</h4><p>经检查是cookie的path作用域的原因，可以这样解决。<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">let <span class=\"keyword\">options</span> = proxyTable[ctx]</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">if</span> (typeof <span class=\"keyword\">options</span> === <span class=\"string\">'string'</span>) &#123;</div><div class=\"line\">   <span class=\"keyword\">options</span> = &#123;</div><div class=\"line\">     target: <span class=\"keyword\">options</span>,</div><div class=\"line\">     changeOrigin: <span class=\"keyword\">true</span>,</div><div class=\"line\"></div><div class=\"line\">     onProxyRes(proxyRes, req, res) &#123;</div><div class=\"line\">       Array.prototype.slice.<span class=\"keyword\">call</span>(proxyRes.headers[<span class=\"string\">'set-cookie'</span>] || <span class=\"string\">''</span>)  </div><div class=\"line\">       .map(item =&gt; &#123;</div><div class=\"line\">         item = item.replace(<span class=\"regexp\">/Path=\\/.*?;/</span>, <span class=\"string\">'Path=/;'</span>)</div><div class=\"line\">       &#125;)</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">   &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>这段代码就是将proxyRes.headers[‘set-cookie’]的path=/xx 转变成 path=/</p>\n<h3 id=\"有时候在做代理请求的时候，需要拦截处理req的设置，\"><a href=\"#有时候在做代理请求的时候，需要拦截处理req的设置，\" class=\"headerlink\" title=\"有时候在做代理请求的时候，需要拦截处理req的设置，\"></a>有时候在做代理请求的时候，需要拦截处理req的设置，</h3><p>查看<strong>http-proxy-middleware</strong>的文档，可以用filter做拦截，代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(proxyMiddleware(<span class=\"function\">(<span class=\"params\">pathName, req</span>) =&gt;</span> &#123;</div><div class=\"line\">    pathName = req.originalUrl = req.url = <span class=\"string\">`<span class=\"subst\">$&#123;rootAPI&#125;</span><span class=\"subst\">$&#123;req.url&#125;</span>`</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> pathName.match(ctx)</div><div class=\"line\">  &#125;, options))</div></pre></td></tr></table></figure></p>\n<h4 id=\"最后vue-proxy这块的总代码：\"><a href=\"#最后vue-proxy这块的总代码：\" class=\"headerlink\" title=\"最后vue proxy这块的总代码：\"></a>最后vue proxy这块的总代码：</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">Object</span>.keys(proxyTable).forEach(<span class=\"function\"><span class=\"params\">ctx</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> options = proxyTable[ctx]</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> options === <span class=\"string\">'string'</span>) &#123;</div><div class=\"line\">    options = &#123;</div><div class=\"line\">      <span class=\"attr\">target</span>: options,</div><div class=\"line\">      <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">      onProxyRes(proxyRes, req, res) &#123;</div><div class=\"line\">        <span class=\"built_in\">Array</span>.prototype.slice.call(proxyRes.headers[<span class=\"string\">'set-cookie'</span>] || <span class=\"string\">''</span>)  </div><div class=\"line\">        .map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</div><div class=\"line\">          item = item.replace(<span class=\"regexp\">/Path=\\/.*?;/</span>, <span class=\"string\">'Path=/;'</span>)</div><div class=\"line\">        &#125;)</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  app.use(proxyMiddleware(<span class=\"function\">(<span class=\"params\">pathName, req</span>) =&gt;</span> &#123;</div><div class=\"line\">    pathName = req.originalUrl = req.url = <span class=\"string\">`<span class=\"subst\">$&#123;rootAPI&#125;</span><span class=\"subst\">$&#123;req.url&#125;</span>`</span>    </div><div class=\"line\">    <span class=\"comment\">// 可以在此处进行处理request请求</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> pathName.match(ctx)</div><div class=\"line\">  &#125;, options))</div><div class=\"line\"></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，\"><a href=\"#在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，\" class=\"headerlink\" title=\"在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，\"></a>在写vue和JAVA后台进行交互的时候，后端总是拿不到前端的cookie，</h4><p>经检查是cookie的path作用域的原因，可以这样解决。<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">let <span class=\"keyword\">options</span> = proxyTable[ctx]</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">if</span> (typeof <span class=\"keyword\">options</span> === <span class=\"string\">'string'</span>) &#123;</div><div class=\"line\">   <span class=\"keyword\">options</span> = &#123;</div><div class=\"line\">     target: <span class=\"keyword\">options</span>,</div><div class=\"line\">     changeOrigin: <span class=\"keyword\">true</span>,</div><div class=\"line\"></div><div class=\"line\">     onProxyRes(proxyRes, req, res) &#123;</div><div class=\"line\">       Array.prototype.slice.<span class=\"keyword\">call</span>(proxyRes.headers[<span class=\"string\">'set-cookie'</span>] || <span class=\"string\">''</span>)  </div><div class=\"line\">       .map(item =&gt; &#123;</div><div class=\"line\">         item = item.replace(<span class=\"regexp\">/Path=\\/.*?;/</span>, <span class=\"string\">'Path=/;'</span>)</div><div class=\"line\">       &#125;)</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">   &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>","more":"<p>这段代码就是将proxyRes.headers[‘set-cookie’]的path=/xx 转变成 path=/</p>\n<h3 id=\"有时候在做代理请求的时候，需要拦截处理req的设置，\"><a href=\"#有时候在做代理请求的时候，需要拦截处理req的设置，\" class=\"headerlink\" title=\"有时候在做代理请求的时候，需要拦截处理req的设置，\"></a>有时候在做代理请求的时候，需要拦截处理req的设置，</h3><p>查看<strong>http-proxy-middleware</strong>的文档，可以用filter做拦截，代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(proxyMiddleware(<span class=\"function\">(<span class=\"params\">pathName, req</span>) =&gt;</span> &#123;</div><div class=\"line\">    pathName = req.originalUrl = req.url = <span class=\"string\">`<span class=\"subst\">$&#123;rootAPI&#125;</span><span class=\"subst\">$&#123;req.url&#125;</span>`</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> pathName.match(ctx)</div><div class=\"line\">  &#125;, options))</div></pre></td></tr></table></figure></p>\n<h4 id=\"最后vue-proxy这块的总代码：\"><a href=\"#最后vue-proxy这块的总代码：\" class=\"headerlink\" title=\"最后vue proxy这块的总代码：\"></a>最后vue proxy这块的总代码：</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">Object</span>.keys(proxyTable).forEach(<span class=\"function\"><span class=\"params\">ctx</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> options = proxyTable[ctx]</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> options === <span class=\"string\">'string'</span>) &#123;</div><div class=\"line\">    options = &#123;</div><div class=\"line\">      <span class=\"attr\">target</span>: options,</div><div class=\"line\">      <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">      onProxyRes(proxyRes, req, res) &#123;</div><div class=\"line\">        <span class=\"built_in\">Array</span>.prototype.slice.call(proxyRes.headers[<span class=\"string\">'set-cookie'</span>] || <span class=\"string\">''</span>)  </div><div class=\"line\">        .map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</div><div class=\"line\">          item = item.replace(<span class=\"regexp\">/Path=\\/.*?;/</span>, <span class=\"string\">'Path=/;'</span>)</div><div class=\"line\">        &#125;)</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  app.use(proxyMiddleware(<span class=\"function\">(<span class=\"params\">pathName, req</span>) =&gt;</span> &#123;</div><div class=\"line\">    pathName = req.originalUrl = req.url = <span class=\"string\">`<span class=\"subst\">$&#123;rootAPI&#125;</span><span class=\"subst\">$&#123;req.url&#125;</span>`</span>    </div><div class=\"line\">    <span class=\"comment\">// 可以在此处进行处理request请求</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> pathName.match(ctx)</div><div class=\"line\">  &#125;, options))</div><div class=\"line\"></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>"},{"title":"所谓publish-subscribe","_content":"## 所谓观察者模式 publish/subscribe\n1. subscribe事件订阅/事件监听 就是将事件和事件的callback，  \n添加到一个需要监听执行事件队列里面\n    {\n      eventName: [callback1, callback1],\n      eventName: [callback]\n    }\n2. 接收到publish发布事件就是将subscribe的事件从队列拿出来执行\n3. 在外看来就像是一直在监测这个事件，然后接收到publish发布的，  \n执行监测的事件callback","source":"_posts/所谓publish-subscribe.md","raw":"---\ntitle: 所谓publish-subscribe\ncategories: 课外学习\ntags: \n  - 设计模式\n  - javascript\n---\n## 所谓观察者模式 publish/subscribe\n1. subscribe事件订阅/事件监听 就是将事件和事件的callback，  \n添加到一个需要监听执行事件队列里面\n    {\n      eventName: [callback1, callback1],\n      eventName: [callback]\n    }\n2. 接收到publish发布事件就是将subscribe的事件从队列拿出来执行\n3. 在外看来就像是一直在监测这个事件，然后接收到publish发布的，  \n执行监测的事件callback","slug":"所谓publish-subscribe","published":1,"date":"2017-04-13T08:16:07.905Z","updated":"2017-04-13T09:21:55.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1g7ayac000aucv3hqdb15go","content":"<h2 id=\"所谓观察者模式-publish-subscribe\"><a href=\"#所谓观察者模式-publish-subscribe\" class=\"headerlink\" title=\"所谓观察者模式 publish/subscribe\"></a>所谓观察者模式 publish/subscribe</h2><ol>\n<li>subscribe事件订阅/事件监听 就是将事件和事件的callback，<br>添加到一个需要监听执行事件队列里面<br> {<br>   eventName: [callback1, callback1],<br>   eventName: [callback]<br> }</li>\n<li>接收到publish发布事件就是将subscribe的事件从队列拿出来执行</li>\n<li>在外看来就像是一直在监测这个事件，然后接收到publish发布的，<br>执行监测的事件callback</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"所谓观察者模式-publish-subscribe\"><a href=\"#所谓观察者模式-publish-subscribe\" class=\"headerlink\" title=\"所谓观察者模式 publish/subscribe\"></a>所谓观察者模式 publish/subscribe</h2><ol>\n<li>subscribe事件订阅/事件监听 就是将事件和事件的callback，<br>添加到一个需要监听执行事件队列里面<br> {<br>   eventName: [callback1, callback1],<br>   eventName: [callback]<br> }</li>\n<li>接收到publish发布事件就是将subscribe的事件从队列拿出来执行</li>\n<li>在外看来就像是一直在监测这个事件，然后接收到publish发布的，<br>执行监测的事件callback</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1g7aya50008ucv3z8nv1582","category_id":"cj1g7ayah000bucv3wehcjf4f","_id":"cj1g7ayb2000fucv37o2emvzd"},{"post_id":"cj1g7ayac000aucv3hqdb15go","category_id":"cj1g7ayah000bucv3wehcjf4f","_id":"cj1g7ayb4000hucv33laeychn"}],"PostTag":[{"post_id":"cj1g7ay900000ucv3cvpjtrgf","tag_id":"cj1g7ay9b0002ucv37h67j8r7","_id":"cj1g7ay9o0005ucv3hvlewmio"},{"post_id":"cj1g7ay900000ucv3cvpjtrgf","tag_id":"cj1g7ay9f0003ucv3ce80rvtf","_id":"cj1g7ay9p0006ucv3mo4bnhvg"},{"post_id":"cj1g7ay980001ucv3eyq4wjwu","tag_id":"cj1g7ay9f0003ucv3ce80rvtf","_id":"cj1g7ay9p0007ucv317donwd6"},{"post_id":"cj1g7aya50008ucv3z8nv1582","tag_id":"cj1g7ayal000cucv3rwba2bym","_id":"cj1g7ayb8000jucv3jbuep5wy"},{"post_id":"cj1g7aya50008ucv3z8nv1582","tag_id":"cj1g7ayay000eucv33bpn1m4h","_id":"cj1g7ayb9000kucv3mthhgyiq"},{"post_id":"cj1g7aya50008ucv3z8nv1582","tag_id":"cj1g7ayb3000gucv3t9c9ulqu","_id":"cj1g7aybb000lucv3khjbfeld"},{"post_id":"cj1g7aya50008ucv3z8nv1582","tag_id":"cj1g7ay9f0003ucv3ce80rvtf","_id":"cj1g7aybc000mucv3vucck6g3"},{"post_id":"cj1g7ayac000aucv3hqdb15go","tag_id":"cj1g7ayb5000iucv3wjkl381d","_id":"cj1g7aybe000nucv3qs20ma2b"},{"post_id":"cj1g7ayac000aucv3hqdb15go","tag_id":"cj1g7ay9f0003ucv3ce80rvtf","_id":"cj1g7aybf000oucv3zs5eoa1o"}],"Tag":[{"name":"angular","_id":"cj1g7ay9b0002ucv37h67j8r7"},{"name":"javascript","_id":"cj1g7ay9f0003ucv3ce80rvtf"},{"name":"vue","_id":"cj1g7ayal000cucv3rwba2bym"},{"name":"cookie","_id":"cj1g7ayay000eucv33bpn1m4h"},{"name":"node.js","_id":"cj1g7ayb3000gucv3t9c9ulqu"},{"name":"设计模式","_id":"cj1g7ayb5000iucv3wjkl381d"}]}}